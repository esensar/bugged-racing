[gd_scene load_steps=10 format=2]

[ext_resource path="res://scenes/base_track_level.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/dirttrack.png" type="Texture" id=2]

[sub_resource type="Curve3D" id=4]
_data = {
"points": PoolVector3Array( 0, 0, 0, 0, 0, 0, 14.216, 39.4324, 71.6595, 0, 0, 0, 0, 0, 0, 48.497, 32.0944, 57.4446, 0, 0, 0, 0, 0, 0, 63.2095, 34.3302, 15.7474, 0, 0, 0, 0, 0, 0, 52.1399, 31.6108, -13.5262, 0, 0, 0, 0, 0, 0, 24.6326, 28.4639, -50.053, 23.6642, 2.81437, -11.3263, -23.6642, -2.81437, 11.3263, -27.2831, 20.865, -58.278, 13.9886, 2.61135, -22.1052, -13.9886, -2.61135, 22.1052, -57.3715, 19.9951, -34.0108, 0, 0, 0, 0, 0, 0, -55.8672, 12.2, 4.13316, 0, 0, 0, 0, 0, 0, -43.3482, 10.9209, 32.963, 0, 0, 0, 0, 0, 0, -8.39052, 10.014, 49.1887, 0, 0, 0, 0, 0, 0, 21.4522, 8.65878, 34.7661, 0, 0, 0, 0, 0, 0, 40.2058, 0, 6.92621, 0, 0, 0, 0, 0, 0, 40.8815, 0, -14.6971, 0, 0, 0, 0, 0, 0, 23.3126, 0, -42.064, 0, 0, 0, 0, 0, 0, 10.4817, 0, -41.5338, 0, 0, 0, 0, 0, 0, -17.5689, 0, -40.3747, 0, 0, 0, 0, 0, 0, -34.1963, -9.99896, -28.4392, 0, 0, 0, 0, 0, 0, -35.0374, -17.5733, 0.755226, -25.1643, -4.15447, -7.00803, 25.1643, 4.15447, 7.00803, -25.3277, -17.0155, 35.5891, -31.1923, 0.679697, 9.17976, 31.1923, -0.679697, -9.17976, 32.5606, -14.9507, 34.5135, 12.799, 2.25521, 21.396, -12.799, -2.25521, -21.396, 94.622, -21.5309, -8.64266, 22.7995, 6.03879, 7.95921, -22.7995, -6.03879, -7.95921, 48.1915, -51.2168, -78.3252, 19.6079, 3.36048, -7.09978, -19.6079, -3.36048, 7.09978, -9.52077, -51.4458, -96.3843, 0, 0, 0, 0, 0, 0, -75.738, -51.7315, -69.4881, -19.5447, 7.40563, -123.686, 19.5447, -7.40563, 123.686, -111.384, -52.9403, -0.640272, -20.5081, -7.15141, 4.13271, 20.5081, 7.15141, -4.13271, -0.272314, -41.7673, 38.5707, -6.85563, 1.04683, 8.9799, 6.85563, -1.04683, -8.9799, 25.8795, -40.0437, 1.30272, 0, 0, 0, 0, 0, 0, 25.7356, -35.7572, -35.2028, 24.8742, -2.83045, 4.38934, -24.8742, 2.83045, -4.38934, 10.7914, -19.7015, -72.2903, 0, 0, 0, 0, 0, 0, -36.1634, -18.286, -75.8325, 0, 0, 0, 0, 0, 0, -88.1544, -27.7213, -59.939, -4.80772, -11.8088, -46.0525, 4.80772, 11.8088, 46.0525, -125.849, -7.63193, -14.1127, 0, 0, 0, 0, 0, 0, -103.239, -7.89527, 49.2235, 0, 0, 0, 0, 0, 0, -56.7135, -9.16963, 78.2503, -19.945, -1.47294, -6.20989, 19.945, 1.47294, 6.20989, -17.1642, -3.8681, 98.5664, -17.4425, -7.26221, 0.510544, 17.4425, 7.26221, -0.510544, 40.278, -0.352409, 87.5018, -18.589, -11.2058, 5.2025, 18.589, 11.2058, -5.2025, 83.364, 7.04305, 73.1424, -15.6005, -1.56422, 29.2132, 15.6005, 1.56422, -29.2132, 127.511, 18.2447, 10.7672, 13.9779, -21.9478, 42.154, -13.9779, 21.9478, -42.154, 124.034, 29.2792, -82.4309, 35.0404, -1.58311, 22.4948, -35.0404, 1.58311, -22.4948, 74.3478, 58.2156, -162.005, 37.4588, 1.0821, -12.1337, -37.4588, -1.0821, 12.1337, -52.9686, 64.7964, -176.08, 56.0781, 4.44358, -54.6466, -56.0781, -4.44358, 54.6466, -150.169, 50.2784, -91.5872, 0, 0, 0, 0, 0, 0, -160.337, 46.2063, 19.0639, -28.4822, -5.91084, -24.8541, 28.4822, 5.91084, 24.8541, -103.293, 36.1836, 85.952, 0, 0, 0, 0, 0, 0, -51.992, 40.1074, 108.911, 0, 0, 0, 0, 0, 0, -20.3378, 34.0526, 93.3445, -22.3177, -2.73847, -8.35827, 22.3177, 2.73847, 8.35827, -3.68909, 39.4619, 74.5694 ),
"tilts": PoolRealArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
}

[sub_resource type="Shader" id=5]
code = "// NOTE: Shader automatically converted from Godot Engine 3.4.stable's SpatialMaterial.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}

vec2 rotateUV(vec2 uv, vec2 pivot, float rotation) {
	float sine = sin(rotation);
    float cosine = cos(rotation);

    uv -= pivot;
    uv.x = uv.x * cosine - uv.y * sine;
    uv.y = uv.x * sine + uv.y * cosine;
    uv += pivot;

    return uv;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo, rotateUV(base_uv, vec2(0.5), 3.14/2.0));
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 5, 50, 0 )
shader_param/uv1_offset = Vector3( 0.14, -0.525, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 2 )

[sub_resource type="SpatialMaterial" id=7]
albedo_color = Color( 0.333333, 0.262745, 0.262745, 1 )
roughness = 0.76

[sub_resource type="SpatialMaterial" id=2]
albedo_color = Color( 0.0862745, 0.929412, 0.858824, 1 )

[sub_resource type="SphereMesh" id=3]
material = SubResource( 2 )
flip_faces = true

[sub_resource type="BoxShape" id=8]
extents = Vector3( 226.72, 25.6138, 197.933 )

[node name="Spatial" instance=ExtResource( 1 )]

[node name="PlayerSpawnLocation" parent="." index="1"]
transform = Transform( -0.726143, 0, 0.687544, 0, 1, 0, -0.687544, 0, -0.726143, 3.26113, 52.1483, 95.1165 )

[node name="Track" parent="." index="2"]
track_path = NodePath("../Path")
checkpoint_count = 30
checkpoint_dim = Vector2( 25, 25 )

[node name="Path" type="Path" parent="." index="3"]
transform = Transform( 1.06734, 0, 0, 0, 1.06734, 0, 0, 0, 1.06734, 8.02585, 1.25703, 17.8349 )
curve = SubResource( 4 )

[node name="Track" type="CSGPolygon" parent="Path" index="0"]
use_collision = true
polygon = PoolVector2Array( -10, -3, -2, -1, 2, 0, 10, 3 )
mode = 2
path_node = NodePath("..")
path_interval_type = 0
path_interval = 10.0
path_simplify_angle = 0.0
path_rotation = 2
path_local = true
path_continuous_u = true
path_u_distance = 1.0
path_joined = true
material = SubResource( 6 )

[node name="Rails" type="CSGPolygon" parent="Path" index="1"]
use_collision = true
polygon = PoolVector2Array( -10, 3, -12, 3, -12, -3.1, 12, -3.1, 12, 6, 10, 6, 10, 2.9, -10, -3.1 )
mode = 2
path_node = NodePath("..")
path_interval_type = 0
path_interval = 10.0
path_simplify_angle = 0.0
path_rotation = 2
path_local = true
path_continuous_u = true
path_u_distance = 1.0
path_joined = true
material = SubResource( 7 )

[node name="Background" type="MeshInstance" parent="." index="4"]
transform = Transform( 224.434, 0, 0, 0, 224.434, 0, 0, 0, 224.434, 0, 0, 0 )
mesh = SubResource( 3 )
material/0 = null

[node name="ResetArea" type="Area" parent="." index="5"]

[node name="CollisionShape" type="CollisionShape" parent="ResetArea" index="0"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -106.576, 0 )
shape = SubResource( 8 )

[connection signal="body_entered" from="ResetArea" to="." method="_on_ResetArea_body_entered"]
